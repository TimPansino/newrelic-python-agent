# Copyright 2010 New Relic, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: Benchmarks

on:
  push:
    branches:
      - main
    tags-ignore:
      - "**"
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.ref || github.run_id }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  # Benchmarks
  benchmark:
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/newrelic/newrelic-python-agent-ci:latest
      options: >-
        --add-host=host.docker.internal:host-gateway
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0

      - name: Fetch all git refs
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --all

      - name: Configure pip cache
        run: |
          mkdir -p /github/home/.cache/pip
          chown -R "$(whoami)" /github/home/.cache/pip

      - name: Determine Base Ref
        id: base_ref
        run: |
          upstream=${{ github.event_name == 'pull_request' && 'origin/' || '' }}
          branch=${{ github.event_name == 'pull_request' && github.base_ref || 'HEAD^' }}
          echo "BASE_REF=${upstream}${branch}" >>"${GITHUB_OUTPUT}"

      - name: Install Dependencies
        run: |
          pip install asv

      - name: Configure Machine Information
        run: |
          asv machine --yes

      - name: Run Benchmark
        run: |
          asv continuous -e ${{ steps.base_ref.outputs.BASE_REF }} HEAD

      - name: Compare Results
        run: |
          asv compare ${{ steps.base_ref.outputs.BASE_REF }} HEAD
